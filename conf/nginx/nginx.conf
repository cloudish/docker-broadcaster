worker_processes  1;
daemon off;
user docker;
exec_options on;

events {
    worker_connections  1024;
}

http {
    server {
        listen 80 default_server;
        server_name _;

        location / {
            root /src;
            autoindex on;
        }

        error_log /log/error_log.log;
        access_log /log/access_log.log;
    }

    server {
        listen 8080 default_server;
        server_name _;

        location /on_play {

            # set connection secure link
            secure_link $arg_st,$arg_e;
            secure_link_md5 <private_key>/$arg_name$arg_e;

            # bad hash
            if ($secure_link = "") {
                return 501;
            }

            # link expired
            if ($secure_link = "0") {
                return 502;
            }

            return 200;
        }

        error_log /log/error_log.log;
        access_log /log/access_log.log;
    }
}

rtmp {
    server {
        listen 1935;
        chunk_size <chunk_size>;
        notify_method get;

        application <url_transcode> {
            on_publish http://localhost:8080/on_play;

            live on;
            record off;

            # STREAM TO YOUTUBE.COM
            <youtube_active>push <youtube_url> playpath=<youtube_streamkey>;

            exec_push ffmpeg -re -i rtmp://localhost/<url_transcode>/$name -vcodec libx264 -preset <x264_preset> -x264opts nal-hrd=cbr:force-cfr=1:keyint=<key_interval> -r <fps> -b:v <bitrate>k -maxrate <bitrate>k -bufsize <bitrate>k -threads 12 -s <stream_specifier> -sws_flags spline -acodec copy -f flv rtmp://localhost/<url_live> 2>/log/ffmpeg.log name=degraded_quality;
        }

        application <url_live> {
            live on;
            record off;

            allow publish 127.0.0.1;
            allow play all;
            deny publish all;

            <transcoded_stream_array>
        }

    	access_log /log/rtmp_access_log.log;
    }
}
